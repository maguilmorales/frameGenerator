import React, { useRef, useEffect } from "react";
import { Canvas, useFrame, useLoader, useThree } from "@react-three/fiber";
import { Plane, OrbitControls, Instance, Instances } from "@react-three/drei";
import * as THREE from "three";
import { useControls } from "leva";
import { TextureLoader } from "three/src/loaders/TextureLoader";
import fragmentShader from "./shaders/fragment.glsl";
import vertexShader from "./shaders/vertex.glsl";
import { DoubleSide } from "three";


function App() {
  function RoundedRect() {
    const { width, height, radius } = useControls({
      width: { value: 50, min: 0, max: 100, step: 1 },
      height: { value: 50, min: 0, max: 100, step: 1 },
      radius: { value: 20, min: 1, max: 30, step: 1 },
    });

    const roundedRectShape = new THREE.Shape();

    const x = 0;
    const y = 0;

    roundedRectShape.moveTo(x, y + radius);
    roundedRectShape.lineTo(x, y + height - radius);
    roundedRectShape.quadraticCurveTo(x, y + height, x + radius, y + height);
    roundedRectShape.lineTo(x + width - radius, y + height);
    roundedRectShape.quadraticCurveTo(
      x + width,
      y + height,
      x + width,
      y + height - radius
    );
    roundedRectShape.lineTo(x + width, y + radius);
    roundedRectShape.quadraticCurveTo(x + width, y, x + width - radius, y);
    roundedRectShape.lineTo(x + radius, y);
    roundedRectShape.quadraticCurveTo(x, y, x, y + radius);

    return roundedRectShape;
  }


  return (
    <Canvas camera={{ position: [90, 90, 100] }}>
      <OrbitControls enableDamping />
      <color attach="background" args={[backgroundColorFrame]} />
      <ambientLight intensity={1} />
      <Group position={[0, 0, 10]}>
          <RoundedLineShape width={20} height={25} radius={5} color={'white'}  />
          </Group>
    </Canvas>
  );
}
export default App;